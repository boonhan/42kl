#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>

int check_line_match(int n, char *seq) // return 1 if pass check, 0 if fail
{
  printf("testing. n is %d, seq is %s\n", n, seq);
  int i;
  int j;
  int result = 4;
  
  i = 1;
  while (seq[i] != '\0')
  {
      j = 0;
      while (j < i)
      {
          if (seq[j] > seq[i])
          {
              result--;
              break;
          }
          j++;
      }
      i++;
  }
  printf("result is %d\n", result);
  if (n == result)
  {
      return (1);
  }
  else
  {
      return (0);
  }
}

int check_line_validity(char *seq)
{
    //printf("testing. n is %d, seq is %s\n", seq);
  int i;
  int j;
  
  i = 1;
  while (seq[i] != '\0')
  {
      j = 0;
      while (j < i)
      {
          if (seq[j] == seq[i])
          {
              return (0);
          }
          j++;
      }
      i++;
  }
      return (1);
}

int *init_table() // create a 4x4 table (hardcoded under int x and int y)
{
    printf("testing init table\n");
    int x = 4;
    int y = 4;
    int *a = (int *)malloc(x * y * sizeof(int));
    int i;
    int j;
    i = 0;
    while (i < y)
    {
        j = 0;
        while (j < x)
        {
            *(a + i * y + j) = i + j; // set array value
            j++;
        }
        i++;
    }
    for (i=0; i<y; i++)
    {
        for (j=0; j<x; j++)
        {
            //printf("j is %d\n", j);
            printf("%d ", *(a + i * y + j));
        }
        printf("\n");
    }
    printf("address of a in init is %d, goes to %d\n", &a, a);
    return (a);
}

char *genseq_up(int n, int arr[6][6])
{
    int i;
    char seq[4];
    
    i = 0;
    while (i < 4)
    {
        //seq[i] = '1' + i;
        seq[i] = arr[1][i+1] + 48;
        printf("testing. seq[i] is %c. i is %d\n", seq[i], i);
        i++;
    }
}

void main()
{
    int n = 1;
    int *arr;
    arr = init_table();
    
    //printf("arr is %d\n", arr[1][1]);
    char *seq = "1432";
    genseq_up(n, arr);
    //printf("checkline result for %s is %d\n", seq, check_line_match(n, seq));
}
